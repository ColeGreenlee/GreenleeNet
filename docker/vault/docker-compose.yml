---
version: "2"
services:
  traefik:
    container_name: traefik
    image: "traefik:v2.0.0"
    restart: unless-stopped
    command:
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--providers.docker=true"
      - "--api.insecure" # Don't do that in production
      - "--certificatesresolvers.default_httpchallenge.acme.httpchallenge=true"
      - "--certificatesresolvers.default_httpchallenge.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.default_httpchallenge.acme.email=Cole@Greenlee.io"
      - "--certificatesresolvers.default_httpchallenge.acme.storage=/letsencrypt/acme.json"
    labels:
      # global redirect to https
      - "traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)"
      - "traefik.http.routers.http-catchall.entrypoints=web"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"
      # middleware redirect
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
    ports:
      - "443:443"
      - "80:80"
      - "8080:8080"
    volumes:
      - "./letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
  plex:
    container_name: plex
    image: plexinc/pms-docker
    restart: unless-stopped
    environment:
      - TZ=America/Chicago
      - PLEX_CLAIM="${PLEX_CLAIM}"
#    network_mode: host
    volumes:
      - /storage_pool/media/Plex:/config
      - /storage_pool/media:/data
      - /storage_pool/media/transcode:/transcode
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.plex.rule=Host(\"v.greenlee.io\")"
      - "traefik.http.routers.plex.entrypoints=websecure"
      - "traefik.http.routers.plex.tls.certresolver=default_httpchallenge"
      - "traefik.http.services.plex.loadbalancer.server.port=32400"
    ports:
      - 32400:32400/tcp
      - 3005:3005/tcp
      - 8324:8324/tcp
      - 32469:32469/tcp
      - 1900:1900/udp
      - 32410:32410/udp
      - 32412:32412/udp
      - 32413:32413/udp
      - 32414:32414/udp
      
  wireguard:
    image: linuxserver/wireguard
    container_name: wireguard
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Chicago
    volumes:
      - ./wireguard/config:/config
      - /lib/modules:/lib/modules
    sysctls:
       - net.ipv4.conf.all.src_valid_mark=1
    restart: unless-stopped

  qbittorrent:
    image: linuxserver/qbittorrent
    container_name: qbittorrent
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Chicago
      - UMASK_SET=022
      - WEBUI_PORT=8080
    volumes:
      - ${MEDIA_PATH}/qbittorrent/config:/config
      - ${MEDIA_PATH}/Downloads:/downloads
    ports:
      - 6881:6881
      - 6881:6881/udp
      - 8080:8080
    restart: unless-stopped
    network_mode:
      service: wireguard